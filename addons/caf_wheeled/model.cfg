class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class Car : Vehicle {
		skeletonBones[]=
		{
			"drivewheel","",

			"wheel_1_1_damper_land","",
			"wheel_1_2_damper_land","",
			"wheel_1_3_damper_land","",
			"wheel_1_4_damper_land","",

			"wheel_2_1_damper_land","",
			"wheel_2_2_damper_land","",
			"wheel_2_3_damper_land","",
			"wheel_2_4_damper_land","",

			"wheel_1_1_damper","wheel_1_1_damper_land",
			"wheel_1_2_damper","wheel_1_2_damper_land",
			"wheel_1_3_damper","wheel_1_3_damper_land",
			"wheel_1_4_damper","wheel_1_4_damper_land",

			"wheel_2_1_damper","wheel_2_1_damper_land",
			"wheel_2_2_damper","wheel_2_2_damper_land",
			"wheel_2_3_damper","wheel_2_3_damper_land",
			"wheel_2_4_damper","wheel_2_4_damper_land",

			"wheel_1_1_steering","wheel_1_1_damper",
			"wheel_1_2_steering","wheel_1_2_damper",
			"wheel_1_3_steering","wheel_1_3_damper",
			"wheel_1_4_steering","wheel_1_4_damper",

			"wheel_2_1_steering","wheel_2_1_damper",
			"wheel_2_2_steering","wheel_2_2_damper",
			"wheel_2_3_steering","wheel_2_3_damper",
			"wheel_2_4_steering","wheel_2_4_damper",

			"wheel_1_1","wheel_1_1_steering",
			"wheel_1_2","wheel_1_2_steering",
			"wheel_1_3","wheel_1_3_steering",
			"wheel_1_4","wheel_1_4_steering",

			"wheel_2_1","wheel_2_1_steering",
			"wheel_2_2","wheel_2_2_steering",
			"wheel_2_3","wheel_2_3_steering",
			"wheel_2_4","wheel_2_4_steering",

			"wheel_1_1_unhide","wheel_1_1",
			"wheel_1_2_unhide","wheel_1_2",
			"wheel_1_3_unhide","wheel_1_3",
			"wheel_1_4_unhide","wheel_1_4",

			"wheel_2_1_unhide","wheel_2_1",
			"wheel_2_2_unhide","wheel_2_2",
			"wheel_2_3_unhide","wheel_2_3",
			"wheel_2_4_unhide","wheel_2_4",

			"wheel_1_1_hide","wheel_1_1",
			"wheel_1_2_hide","wheel_1_2",
			"wheel_1_3_hide","wheel_1_3",
			"wheel_1_4_hide","wheel_1_4",

			"wheel_2_1_hide","wheel_2_1",
			"wheel_2_2_hide","wheel_2_2",
			"wheel_2_3_hide","wheel_2_3",
			"wheel_2_4_hide","wheel_2_4",

			"OtocVez","",
			"OtocHlaven","OtocVez",

			"damageHide","",
			"damageVez","OtocVez",
			"damageHlaven","OtocHlaven",

			"ukaz_rychlo","",
			"ukaz_rychlo2","",
			"ukaz_rpm","",
			"mph","",
			"rpm","",
			"fuel","",
			"fuel_1","",
			"fuel_01","",
			"fuel_2","",
			"fuel_3","",
			
			"hatch_rear_1","",
			"hatch_rear_2","",
			"ramp","",
	
	
			"turret","",
			"cannon","turret",
			
			"recoilHlaven",	"otocHlaven",			
			
			"obsturret","turret",
			"obsgun","obsturret",
			"commander","turret",
			"gun_commander","commander",
			"hatch_driver","",
			"hatch_cmdr","turret",
			"hatch_gnr","turret",

			"OtocHlaven_Shake","obsgun",
			"ammo_belt","OtocHlaven_Shake",
			"magazine","OtocHlaven_Shake",
			"feedtray_cover","OtocHlaven_Shake",
			"bolt","OtocHlaven_Shake",
			"charging_handle","OtocHlaven_Shake",
			"OtocHlaven_Shake","c6_grip",
			"c6_grip","c6_barrel",			
			
			"bullet001","bullet002",
			"bullet002","bullet003",
			"bullet003","bullet004",
			"bullet004","bullet005",
			"bullet005","bullet006",
			"bullet006","bullet007",
			"bullet007","bullet008",
			"bullet008","ammo_belt",			
			
			"newturret","",
			"newgun","newturret",
			"mast1","",
			"hatch_rear_1","",
			"mast2","mast1",
			"mast3","mast2",
			"mast4","mast3",
			"mast5","mast4",
			"lavrss_turret","mast5",
			"lavrss_gun","lavrss_turret",
			"sensors_turret","",
			"sensors","sensors_turret",
			"recoil","",
			"reverse_light",""
		};
	};
	class 8x8_Base: Car
	{
		skeletonInherit = "Car";
		skeletonBones[] = 
		{
			"ind_mph","",
			"ind_fuel","",
			"ind_temp","",
			"transportbase","",
			"plachta","",
			"ammogroup","",
			"repairgroup","",
			"benches","",
			"fueltank","",
			"teplota",""
		};
	};
	class milcots: Car
	{
		skeletonInherit = "Car";
		skeletonBones[] = 
		{
			"cover",""
		};
	};
};

class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};	
	class Car: Vehicle
	{
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 180;	// Maximum half-cooling time (in seconds)
		afMax = 100;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 8;		// Maximum temperature when the model is moving (in celsius)
		mFact = 1;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 150;	// Metabolism temperature of the model (in celsius)

		sections[]=
		{
			"ammo",
			"zadni svetlo",
			"brzdove svetlo",
			"spz",
			"motor",
			"body",
			"clan",
			"clan_sign",
			"zasleh",
			"Light_R",
			"Light_L",
			"podsvit pristroju"
		};
		skeletonName="Car";
		class Animations
		{
			// destruct START
			class damageHide
			{
				type="hide";
				source="damage";
				selection="damageHide";
				hideValue=1.0;
			};
			class damageHideVez:damageHide {selection="OtocVez";};
			class damageHideHlaven:damageHide {selection="OtocHlaven";};

			// Wheels START
			// Wheels Complete Destruct START
			class wheel_1_1_destruct
			{
				type="hide";
				selection="wheel_1_1_hide";
				source="HitLFWheel";
				minValue = 0; // upravit na 0.99
				maxValue = 1; // upravit na 1.0
				hidevalue = 0.99999;
			};
			class wheel_1_4_destruct:wheel_1_1_destruct {source="HitLBWheel";selection="wheel_1_4_hide";};
			class wheel_1_3_destruct:wheel_1_1_destruct {source="HitLMWheel";selection="wheel_1_3_hide";};
			class wheel_1_2_destruct:wheel_1_1_destruct {source="HitLF2Wheel";selection="wheel_1_2_hide";};

			class wheel_2_1_destruct:wheel_1_1_destruct {source="HitRFWheel";selection="wheel_2_1_hide";};
			class wheel_2_4_destruct:wheel_1_1_destruct {source="HitRBWheel";selection="wheel_2_4_hide";};
			class wheel_2_3_destruct:wheel_1_1_destruct {source="HitRMWheel";selection="wheel_2_3_hide";};
			class wheel_2_2_destruct:wheel_1_1_destruct {source="HitRF2Wheel";selection="wheel_2_2_hide";};

			class wheel_1_1_destruct_unhide
			{
				type="hide";
				selection="wheel_1_1_unhide";
				source="HitLFWheel";
				minValue = 0; 
				maxValue = 1; 
				hidevalue = 0.00000;
				UnHidevalue = 1.00000;
			};
			class wheel_1_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLBWheel";selection="wheel_1_4_unhide";};
			class wheel_1_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLMWheel";selection="wheel_1_3_unhide";};
			class wheel_1_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitLF2Wheel";selection="wheel_1_2_unhide";};

			class wheel_2_1_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRFWheel";selection="wheel_2_1_unhide";};
			class wheel_2_4_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRBWheel";selection="wheel_2_4_unhide";};
			class wheel_2_3_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRMWheel";selection="wheel_2_3_unhide";};
			class wheel_2_2_destruct_unhide:wheel_1_1_destruct_unhide {source="HitRF2Wheel";selection="wheel_2_2_unhide";};

			// Wheels Complete Destruct END

			#define DamageOffset 0.2

			// Wheels Damage START
			class wheel_1_1_Damage:wheel_1_1_destruct
			{
				type="translation";
				axis="Basic_Damper_Destruct_Axis";
				memory=1;
				selection="wheel_1_1_damper";
				source="HitLFWheel";
				minValue = 0.0;
				maxValue = 1;
				offset0 = 0;
				offset1 = DamageOffset;
			};
			class wheel_1_4_Damage:wheel_1_1_Damage {source="HitLBWheel";selection="wheel_1_4_damper";};
			class wheel_1_3_Damage:wheel_1_1_Damage {source="HitLMWheel";selection="wheel_1_3_damper";};
			class wheel_1_2_Damage:wheel_1_1_Damage {source="HitLF2Wheel";selection="wheel_1_2_damper";};

			class wheel_2_1_Damage:wheel_1_1_Damage {source="HitRFWheel";selection="wheel_2_1_damper";};
			class wheel_2_4_Damage:wheel_1_1_Damage {source="HitRBWheel";selection="wheel_2_4_damper";};
			class wheel_2_3_Damage:wheel_1_1_Damage {source="HitRMWheel";selection="wheel_2_3_damper";};
			class wheel_2_2_Damage:wheel_1_1_Damage {source="HitRF2Wheel";selection="wheel_2_2_damper";};


			class wheel_1_1_Damper_Damage_BackAnim:wheel_1_1_Damage {selection="wheel_1_1_damper";offset1 = -1.2*DamageOffset;};
			class wheel_1_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLBWheel";selection="wheel_1_4_damper";};
			class wheel_1_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLMWheel";selection="wheel_1_3_damper";};
			class wheel_1_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitLF2Wheel";selection="wheel_1_2_damper";};

			class wheel_2_1_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRFWheel";selection="wheel_2_1_damper";};
			class wheel_2_4_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRBWheel";selection="wheel_2_4_damper";};
			class wheel_2_3_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRMWheel";selection="wheel_2_3_damper";};
			class wheel_2_2_Damper_Damage_BackAnim:wheel_1_1_Damper_Damage_BackAnim {source="HitRF2Wheel";selection="wheel_2_2_damper";};

			// Wheels Damage END
			// Wheels END

			class Fuel: Rotation
			{
				source="fuel";
				selection="fuel";
				axis="fuel_axis";
				maxValue=1;
				memory=1;
				angle0="rad -110";
				angle1=0;
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="mph_axis";
				memory=1;
				maxValue=38.900002;
				angle1="rad -265";
			};
			class IndicatorFuel: Rotation
			{
				type="rotation";
				source="fuel";
				selection="fuel_1";
				axis="fuel_1_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				angle0=-0.087266;
				angle1=-1.658063;
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="rpm_axis";
				memory=1;
				angle1="rad 80";
			};
			class DrivingWheel: Rotation
			{
				source="drivingWheel";
				selection="drivewheel";
				axis="drivewheel_axis";
				minValue=-1;
				maxValue=1;
				angle0=(rad 80);
				angle1=(rad -80);
			};
			class Steering_1_1
			{
				type="rotationY";
				source="drivingWheel";
				selection="wheel_1_1_steering";
				axis="wheel_1_1_steering_axis";
				memory=1;
				minValue= -1;
				maxValue= 1;
				angle0=1.047198;
				angle1=-1.047198;
			};
			class Steering_2_1: Steering_1_1
			{
				selection="wheel_2_1_steering";
				axis="wheel_2_1_steering_axis";
			};
			class Steering_1_4: Steering_1_1
			{
				selection="wheel_1_4_steering";
				axis="wheel_1_4_steering_axis";
			};
			class Steering_2_4: Steering_2_1
			{
				selection="wheel_2_4_steering";
				axis="wheel_2_4_steering_axis";
			};
			class Wheel_1_1
			{
				type="rotationX";
				source="wheel";
				selection="wheel_1_1";
				axis="wheel_1_1_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1="rad -360";
			};
			class wheel_2_1: Wheel_1_1 	{selection="wheel_2_1";	axis="wheel_2_1_axis";};
			class wheel_1_2: Wheel_1_1	{selection="wheel_1_2";	axis="wheel_1_2_axis";};
			class wheel_1_3: Wheel_1_1	{selection="wheel_1_3";	axis="wheel_1_3_axis";};
			class Wheel_2_2: Wheel_2_1	{selection="wheel_2_2";	axis="wheel_2_2_axis";};
			class Wheel_2_3: Wheel_2_1	{selection="wheel_2_3";	axis="wheel_2_3_axis";};
			class Wheel_1_4: Wheel_1_1	{selection="wheel_1_4";	axis="wheel_1_4_axis";};
			class Wheel_2_4: Wheel_2_1	{selection="wheel_2_4";	axis="wheel_2_4_axis";};
			
			class Wheel_1_1_Damper
			{
				type="translation";
				source="damper";
				selection="wheel_1_1_damper_land";
				axis="posun wheel_1_1";
				animPeriod = 1;
				minValue="0";
				maxValue="1";
				offset0= "0.5";
				offset1= "-0.5";
				memory=1;
			};
			class wheel_2_1_Damper: Wheel_1_1_Damper {selection="wheel_2_1_damper_land";};
			class wheel_1_2_Damper: Wheel_1_1_Damper {selection="wheel_1_2_damper_land";};
			class Wheel_2_2_Damper: Wheel_1_1_Damper {selection="wheel_2_2_damper_land";};
			
			class daylights
			{
				type="hide";
				source="rpm";
				selection="daylights";
				minValue=-0.8;
				maxValue=0.2;
				unhidevalue=1;
				sourceAddress="clamp";
			};
			
			class reverse_light
			{
				type="Hide";
				selection="reverse_light";
				sourceAddress="clamp";
				source="Gear";
				minValue = -1;
				maxValue = 0;
				hideValue = "0.2";	
			};
			class MainTurret
			{
				type="rotationY";
				source="mainTurret";
				selection="turret";
				axis="turret_axis";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainGun: MainTurret
			{
				type="rotationX";
				source="mainGun";
				selection="cannon";
				axis="cannon_axis";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};			
			class obsTurret
			{
				type="rotationY";
				source="obsTurret";
				selection="obsTurret";
				axis="turret_cmdr_axis";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class obsGun: obsTurret
			{
				type="rotationX";
				source="obsGun";
				selection="obsGun";
				axis="gun_cmdr_axis";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class Recoil 
			{
				type="translation";
				source="recoil_source";
				selection="RecoilHlaven";
				axis="RecoilHlaven_axis";
				memory=1;
				minValue=0.85;
				maxValue=1;
				offset0=0;
				offset1=-1;
			};	
			class ammo_belt_rotation
			{
				type="rotation";
				selection="ammo_belt";
				source="ReloadAnim";
				axis="ammo_belt_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0.000000;
				angle1=7.5*3.14159265358/180;
			};	
			class feedtray_cover_up
			{
				type="rotation";
				source="reloadMagazine";
				selection="feedtray_cover";
				axis="feedtray_cover_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.0500000;
				angle0=0.000000;
				angle1=1.570796;
			};
			class feedtray_cover_down:feedtray_cover_up
			{
				minValue=0.950000;
				maxValue=1.000000;
				angle0=0.000000;
				angle1=-1.570796;
			};		
			class Turret_shake:ammo_belt_rotation
			{
				type="translation";
				sourceAddress="mirror";
				selection="OtocHlaven_Shake";
				axis="osaveze";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside:Turret_shake
			{
				axis="osahlavne";
				maxValue=0.05*1.3;
				offset0=0;
				offset1=-0.02;
			};
			class Magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="magazine";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};
			//BULLET_HIDE(001,8,100)
			//BULLET_HIDE(002,8,100)
			//BULLET_HIDE(003,8,100)
			//BULLET_HIDE(004,8,100)
			//BULLET_HIDE(005,8,100)
			//BULLET_HIDE(006,8,100)
			//BULLET_HIDE(007,8,100)
			//BULLET_HIDE(008,8,100)
			class Bolt_recoil
			{
				type="translation";
				selection="bolt";
				source="ReloadAnim";
				axis="recoil_axis";
				memory=1;
				sourceAddress="mirror";
				minValue=0;
				maxValue=0.45;
				offset0=0;
				offset1=-0.2;				
			};
			class Bolt_reload_begin:Bolt_recoil
			{
				type="translation";
				sourceAddress="clamp";
				source="reloadMagazine";
				minValue=0.00000;
				maxValue=0.0200000;
			};
			class Bolt_reload_end:bolt_reload_begin
			{
				minValue=0.050000;
				maxValue=0.060000;
				offset0=0;
				offset1=0.2;
			};						
			class HatchGunner
			{
				type="rotation";
				source="hatchGunner";
				selection="hatch_gnr";
				axis="hatch_gnr_axis";
				memory="true";
				animPeriod=0;
				angle0=0;
				angle1="rad 178";
			};
			class HatchCommander
			{
				type="rotation";
				source="hatchCommander";
				selection="hatch_cmdr";
				axis="hatch_cmdr_axis";
				memory="true";
				animPeriod=0;
				angle0=0;
				angle1="rad -178";
			};
			class rampdoor
			{
				type="rotation";
				source="userramp";
				selection="ramp";
				axis="ramp_axis";
				memory="true";
				animperiod=0;
				angle0=0;
				angle1="rad 90";
			};
		
			class HatchDriver: Rotation
			{
				source="hatchDriver";
				selection="hatch_driver";
				axis="hatch_driver_axis";
				memory="true";
				angle0=0;
				angle1="rad 025";
			};
			class HatchCargo_1
			{
				type="rotation";
				source="hatchCargo_1";
				selection="hatch_rear_1";
				axis="hatch_rear_1_axis";
				memory="true";
				animPeriod=0;
				angle0=0;
				angle1="rad -160";
			};			
		};
	};
	class caf_8x8_TC: Car {
		skeletonName = "8x8_Base";
		sectionsInherit = "Car";
		class Animations: Animations
		{
			class steering_1_4
			{
				type="rotationY";
				source="drivingwheel";
				selection="wheel_1_4_steering";
				axis="wheel_1_4_steering_axis";//*probably*
				minValue = -1.0;//rad -57.29578
				maxValue = 1.0;//rad 57.29578
				angle0 = 0.547198;//rad 31.352137;
				angle1 = -0.547198;//rad -31.352137;
				animPeriod = 0.0;
				initPhase = 0.0;

			};
			class steering_2_4
			{
				type="rotationY";
				source="drivingwheel";
				selection="wheel_2_4_steering";
				axis="wheel_2_4_steering_axis";//*probably*
				minValue = -1.0;//rad -57.29578
				maxValue = 1.0;//rad 57.29578
				angle0 = 0.547198;//rad 31.352137;
				angle1 = -0.547198;//rad -31.352137;
				animPeriod = 0.0;

			};
			class Select_plachta
			{
				type = "hide";
				source = "Select_plachta";
				selection = "plachta";
				minValue = 0;
				maxValue = 1;
			};
			class Select_transport
			{
				type = "hide";
				source = "Select_transportbase";
				selection = "transportbase";
				minValue = 0;
				maxValue = 1;
			};
			class Select_benches
			{
				type = "hide";
				source = "Select_benches";
				selection = "benches";
				minValue = 0;
				maxValue = 1;
			};
			class Select_repair
			{
				type = "hide";
				source = "Select_repair";
				selection = "repairgroup";
				minValue = 0;
				maxValue = 1;
			};
			class Select_ammo
			{
				type = "hide";
				source = "Select_ammo";
				selection = "ammogroup";
				minValue = 0;
				maxValue = 1;
			};
			class Select_fuel
			{
				type = "hide";
				source = "Select_fuel";
				selection = "fueltank";
				minValue = 0;
				maxValue = 1;
			};
			class Fuel: Fuel
			{
				angle0 = - rad 130;
			};
			// Speed from 0 to 1
			class IndicatorSpeed: IndicatorSpeed
			{
				selection = "ind_mph";
				axis = "ind_mph_axis";
				minValue = 0;
				maxValue = 0.1388; //0.5
				angle0 = rad -10;
				angle1 = rad -17;
			};
			// Speed from 1 to 40
			class IndicatorSpeed1: IndicatorSpeed
			{
				minValue = 0.13888; //0.5001
				maxValue = 11.11111; //40
				angle0 = rad 0;
				angle1 = rad -32; //-49
			};
			// Speed from 40 to 60
			class IndicatorSpeed40: IndicatorSpeed
			{
				minValue = 11.11112; //40.0001
				maxValue = 16.66666; //60
				angle0 = rad 0;
				angle1 = rad -42;
			};
			// Speed from 60 to 80
			class IndicatorSpeed60: IndicatorSpeed
			{
				minValue = 16.66669; //60.0001
				maxValue = 22.22222; //80
				angle0 = rad 0;
				angle1 = rad -35;
			};
			// Speed from 80 to 100
			class IndicatorSpeed80: IndicatorSpeed
			{
				minValue = 22.22225; //80.0001
				maxValue = 27.77777; //100
				angle0 = rad 0;
				angle1 = rad -35;
			};
			// Speed from 100 to 120
			class IndicatorSpeed100: IndicatorSpeed
			{
				minValue = 27.77780; //100.0001
				maxValue = 33.33333; //120;
				angle0 = rad 0;
				angle1 = rad -34;
			};
			// Speed from 120 to 140
			class IndicatorSpeed120: IndicatorSpeed
			{
				minValue = 33.33336; //120.0001
				maxValue = 38.88888; //140
				angle0 = rad 0;
				angle1 = rad -34;
			};
			// Speed over 140
			class IndicatorSpeed140: IndicatorSpeed
			{
				minValue = 38.88891; //140.0001
				maxValue = 40.97222; //147.5
				angle0 = rad 0;
				angle1 = rad -15;
			};

			class IndicatorFuel: IndicatorFuel
			{
				selection="ind_fuel";
				axis="ind_fuel_axis";
				angle0 = rad -138;
				angle1 = rad 1;
			};
			class IndicatorTemp: Rotation
			{
				source = "rpm";
				selection = "ind_temp";
				axis = "ind_temp_axis";
				memory = 1;
				minValue = 0.000000;
				maxValue = 1.000000;
				angle0 = rad -15;
				angle1 = rad 5;
			};	
		};
	};
	class milcots: Car {
		skeletonName = "milcots";
		sectionsInherit = "Car";
		class Animations: Animations
		{
			class Select_cover
			{
				type = "hide";
				source = "Select_cover";
				selection = "cover";
				minValue = 0;
				maxValue = 1;
			};
		};
	};
};

