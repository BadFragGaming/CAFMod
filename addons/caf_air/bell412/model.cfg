class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class Hide
{
	type = "hide";
	minValue = 0;
	maxValue = 1;
	hideValue = 0.99;
};
#define BULLET_HIDE(x,from,count) class Bullet##x\
			{\
				type="hide";\
				source="revolving";\
				sourceAddress="mirror";\
				selection=bullet##x;\
				minValue=-1.000000;\
				maxValue= 0.000000;\
				hideValue=((count+x-from-2)/count)+0.00001;\
			};
#define BULLET_HIDE_2nd(x,from,count) class Bullet_2##x\
			{\
				type="hide";\
				source="revolving_2";\
				sourceAddress="mirror";\
				selection=bullet##x##_2;\
				minValue=-1.000000;\
				maxValue= 0.000000;\
				hideValue=((count+x-from-2)/count)+0.00001;\
			};
#define ADD_COMPONENT(component) \
	class Add##component \
	{ \
		selection = z_##component; \
		source = Add##component; \
		type = hide; \
		sourceAddress = mirror; \
		minValue = -1; \
		maxValue = 0; \
		hideValue = 0.5; \
	};

#define ALTITUDE_1000F(x) \
	class I_Altitude_1000f_##x: I_Altitude_1000f \
	{ \
		minValue = 304.8*x - 30.48; \
		maxValue = 304.8*x; \
	}; \
	class I_Altitude02_1000f_##x: I_Altitude_1000f_##x \
	{ \
		selection = i_alt02_1000f; \
		axis = i_altitude02_axis; \
	};

#define ALTITUDE_10000F(x) \
	class I_Altitude_10000f_##x: I_Altitude_10000f \
	{ \
		minValue = 3048*x - 30.48; \
		maxValue = 3048*x; \
	}; \
	class I_Altitude02_10000f_##x: I_Altitude_10000f_##x \
	{ \
		selection = i_alt02_1000f; \
		axis = i_altitude02_axis; \
	};

class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle_H: Default {};
	class Helicopter_H: Vehicle_H
	{
		isDiscrete = 0;

		skeletonInherit = "Vehicle_H";
		skeletonBones[]=
		{
			"rotorShaftM","",

			"bladeM01_collective_axis", "rotorShaftM",
			"bladeM02_collective_axis", "rotorShaftM",
			"bladeM03_collective_axis", "rotorShaftM",
			"bladeM04_collective_axis", "rotorShaftM",
			"bladeM05_collective_axis", "rotorShaftM",

			"bladeM01", "bladeM01_collective_axis",
			"bladeM02", "bladeM02_collective_axis",
			"bladeM03", "bladeM03_collective_axis",
			"bladeM04", "bladeM04_collective_axis",
			"bladeM05", "bladeM05_collective_axis",

			"bladeM01_bend", "bladeM01",
			"bladeM02_bend", "bladeM02",
			"bladeM03_bend", "bladeM03",
			"bladeM04_bend", "bladeM04",
			"bladeM05_bend", "bladeM05",

			"bladeM01_joint", "rotorShaftM",
			"bladeM02_joint", "rotorShaftM",
			"bladeM03_joint", "rotorShaftM",
			"bladeM04_joint", "rotorShaftM",
			"bladeM05_joint", "rotorShaftM",

			"bladeM01_joint_horizontal_axis", "bladeM01_joint",
			"bladeM02_joint_horizontal_axis", "bladeM02_joint",
			"bladeM03_joint_horizontal_axis", "bladeM03_joint",
			"bladeM04_joint_horizontal_axis", "bladeM04_joint",
			"bladeM05_joint_horizontal_axis", "bladeM05_joint",

			"bladeM01_bank_tilt", "bladeM01_joint_horizontal_axis",
			"bladeM02_bank_tilt", "bladeM02_joint_horizontal_axis",
			"bladeM03_bank_tilt", "bladeM03_joint_horizontal_axis",
			"bladeM04_bank_tilt", "bladeM04_joint_horizontal_axis",
			"bladeM05_bank_tilt", "bladeM05_joint_horizontal_axis",

			"bladeM01_dive_tilt", "bladeM01_bank_tilt",
			"bladeM02_dive_tilt", "bladeM02_bank_tilt",
			"bladeM03_dive_tilt", "bladeM03_bank_tilt",
			"bladeM04_dive_tilt", "bladeM04_bank_tilt",
			"bladeM05_dive_tilt", "bladeM05_bank_tilt",

			"bladeM01_joint_vertical_axis", "bladeM01_dive_tilt",
			"bladeM02_joint_vertical_axis", "bladeM02_dive_tilt",
			"bladeM03_joint_vertical_axis", "bladeM03_dive_tilt",
			"bladeM04_joint_vertical_axis", "bladeM04_dive_tilt",
			"bladeM05_joint_vertical_axis", "bladeM05_dive_tilt",

			"bladeM01_blur_torque_axis", "bladeM01_joint_vertical_axis",
			"bladeM02_blur_torque_axis", "bladeM02_joint_vertical_axis",
			"bladeM03_blur_torque_axis", "bladeM03_joint_vertical_axis",
			"bladeM04_blur_torque_axis", "bladeM04_joint_vertical_axis",
			"bladeM05_blur_torque_axis", "bladeM05_joint_vertical_axis",

			"bladeM01_blur", "bladeM01_blur_torque_axis",
			"bladeM02_blur", "bladeM02_blur_torque_axis",
			"bladeM03_blur", "bladeM03_blur_torque_axis",
			"bladeM04_blur", "bladeM04_blur_torque_axis",
			"bladeM05_blur", "bladeM05_blur_torque_axis",

			"tail rotor","",

			"stick_pilot","",
			"stick_copilot","",
			"lever_pilot","",
			"lever_copilot","",
			"throttle_pilot","lever_pilot",
			"throttle_switch_pilot","lever_pilot",
			"pedalL","",
			"pedalR","",

			"s_batteries","",
			"s_lightsAC","",
			"s_lightsLDG","",
			"s_trim","",
			"s_radio","",

			"i_speed","",
			"i_bank","",
			"i_alt_100f","",
			"i_alt_1000f","",
			"i_alt_10000f","",
			"i_rpm","",
			"i_compass","",
			"i_vspeed","",
			"i_torque","",
			"i_fuel","",
			"i_hour","",
			"i_minute","",
			"i_oilTemp","",
			"i_oilPress","",
			"i_TOT","",
			"i_WP","",
			"i_temp","",
			"i_AC","",

			"damageHide",""
		};
	};
	class CAF_CH146_BASE: Helicopter_H
	{
		skeletonInherit = "Helicopter_H";
		skeletonBones[] =
		{
			"doorL1","",
			"doorL2","",
			"doorL3","",
			"doorR1","",
			"doorR2","",
			"doorR3","",
			"hatchL","",
			"hatchR","",
			"rotorCover","",

			"l_gantry","",
			"r_gantry","",
			
			"swashPlate","",
			"swashPlate02","",

			"i_speed02","",
			"i_vspeed02","",
			"i_compass02","",
			"i_compass03","",
			"i_horizontSphere","",
			"i_horizontSphere02","",
			"i_horizont","i_bank",
			"i_wp02","",
			"i_alt02_100f","",
			"i_altA_100f","",
			"i_alt02A_100f","",
			"i_altB_100f","",
			"i_alt02B_100f","",
			"i_alt02_1000f","",
			"i_alt02_10000f","",
			"i_rpmB","",
			"i_rpm02","",
			"i_rpm02B","",
			"i_torqueB","",
			"i_torqueC","",
			"i_torque02","",
			"i_torque02B","",
			"i_torque02C","",
			"i_fuel02","",
			"i_gas","",
			"i_gas02","",
			"i_TOT02","",
			"i_oilTemp02","",
			"i_oilTemp03","",
			"i_oilTemp04","",
			"i_oilTemp05","",
			"i_oilTemp06","",
			"i_dc","",
			"i_dc02","",
			"i_ac02","",
			"i_oilPress02","",
			"i_fuelPress","",
			"i_fuelPress02","",
			"i_transPress","",
			"i_transPress02","",
			"i_hydrPress","",
			"i_hydrPress02","",

			"z_FLIR","",
			"z_FLIR_HRot","z_FLIR",
			"z_FLIR_VRot","z_FLIR_HRot",

			"z_SearchLight","",
			"z_SearchLight_HRot","z_SearchLight",
			"z_SearchLight_VRot","z_SearchLight_HRot",

			"z_CargoHook","",
			"z_CargoHook_cover",""
		};
	};
	class CAF_CH146_CAS: CAF_CH146_BASE
	{
		skeletonInherit = "CAF_CH146_BASE";
		skeletonBones[] =
		{
			"gatling_1",
			"",
			"gatling_2",
			""
		};
	};
	
	class CAF_CH146_TRANS: CAF_CH146_BASE
	{
		skeletonInherit = "CAF_CH146_BASE";
		skeletonBones[] =
		{
			"rocket1","",
			"rocket2","",
			"rocket3","",
			"rocket4","",
			"rocket5","",
			"rocket6","",
			"rocket7","",
			"z_Guns","",

			"z_GunL_HRot","z_Guns",
			"z_GunL_VRot","z_GunL_HRot",
			"z_gatlingL","z_GunL_VRot",

			"z_GunR_HRot","z_Guns",
			"z_GunR_VRot","z_GunR_HRot",
			"z_gatlingR","z_GunR_VRot"
		};
	};
	class CAF_CH146_C6: CAF_CH146_TRANS
	{
		skeletonInherit = "CAF_CH146_TRANS";
		skeletonBones[] =
		{
			
			"otocvez","",
			"otochlaven","otocvez",
			"OtocHlaven_Shake","OtocHlaven",
			"ammo_belt","OtocHlaven_Shake",
			"magazine","OtocHlaven_Shake",
			"feedtray_cover","OtocHlaven_Shake",
			"bolt","OtocHlaven_Shake",
			"bullet001","bullet002",
			"bullet002","bullet003",
			"bullet003","bullet004",
			"bullet004","bullet005",
			"bullet005","bullet006",
			"bullet006","bullet007",
			"bullet007","bullet008",
			"bullet008","ammo_belt",

			"otocvez_1","",
			"otochlaven_1","otocvez_1",
			"OtocHlaven_1_Shake","OtocHlaven_1",
			"ammo_belt_2","OtocHlaven_1_Shake",
			"magazine_2","OtocHlaven_1_Shake",
			"feedtray_cover_2","OtocHlaven_1_Shake",
			"bolt_2","OtocHlaven_1_Shake",
			"bullet001_2","bullet002_2",
			"bullet002_2","bullet003_2",
			"bullet003_2","bullet004_2",
			"bullet004_2","bullet005_2",
			"bullet005_2","bullet006_2",
			"bullet006_2","bullet007_2",
			"bullet007_2","bullet008_2",
			"bullet008_2","ammo_belt_2"
		};
	};
	
};



class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle_H: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};

	class Helicopter_H: Vehicle_H
	{
		skeletonName = "Helicopter_H";
		sectionsInherit = "Vehicle_H";
		sections[] =
		{
			"tail rotor static", "tail rotor blur",
			"main rotor static", "main rotor blur",
			"landingLight01",
			"glass1", "glass2", "glass3", "glass4", "glass5"
		};

		class Animations
		{
			// >> Main rotor
			class RotorShaftM: Rotation
			{
				selection = "rotorShaftM";
				source = RotorH;
				axis = "rotorShaftM_axis";
				angle1 = "-rad 360";
			};
			class BladeM01_Collective: Rotation
			{
				selection = "bladeM01";
				source = CollectiveRTD;
				axis = "bladeM01_collective_axis";
				angle0 = rad -10;
				angle1 = rad 10;
			};
			class BladeM02_Collective: BladeM01_Collective {selection = "bladeM02"; axis = "bladeM02_collective_axis";};
			class BladeM03_Collective: BladeM01_Collective {selection = "bladeM03"; axis = "bladeM03_collective_axis";};
			class BladeM04_Collective: BladeM01_Collective {selection = "bladeM04"; axis = "bladeM04_collective_axis";};
			class BladeM05_Collective: BladeM01_Collective {selection = "bladeM05"; axis = "bladeM05_collective_axis";};

			class BladeM01_Bend
			{
				selection = "bladeM01_bend";
				type = translation;
				source = mainRotorRPMRTD;
				axis = "rotorShaftM_axis";
				memory = 1;
				minValue = 0.000000;
				maxValue = 0.1000000;
				offset0 = 0.00000;
				offset1 = -0.24;
			};
			class BladeM02_Bend: BladeM01_Bend {selection = "bladeM02_bend";};
			class BladeM03_Bend: BladeM01_Bend {selection = "bladeM03_bend";};
			class BladeM04_Bend: BladeM01_Bend {selection = "bladeM04_bend";};
			class BladeM05_Bend: BladeM01_Bend {selection = "bladeM05_bend";};

			class BladeM01_Joint_Dive_Tilt
			{
				type = "rotationX";
				source = torqueRTD;
				selection = "bladeM01_dive_tilt";
				axis = "bladeM01_joint";
				memory = 1;
				maxValue =  0.2;
				angle0 = "rad 0";
				angle1 = "rad 0";
			};
			class BladeM02_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM02_dive_tilt"; axis = "bladeM02_joint";};
			class BladeM03_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM03_dive_tilt"; axis = "bladeM03_joint";};
			class BladeM04_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM04_dive_tilt"; axis = "bladeM04_joint";};
			class BladeM05_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM05_dive_tilt"; axis = "bladeM05_joint";};

			class BladeM01_Joint_Bank_Tilt: BladeM01_Joint_Dive_Tilt
			{
				type = "rotationZ";
				selection = "bladeM01_bank_tilt";
			};
			class BladeM02_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM02_bank_tilt"; axis = "bladeM02_joint";};
			class BladeM03_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM03_bank_tilt"; axis = "bladeM03_joint";};
			class BladeM04_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM04_bank_tilt"; axis = "bladeM04_joint";};
			class BladeM05_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM05_bank_tilt"; axis = "bladeM05_joint";};

			class BladeM01_Joint_Horizontal_Axis: RotorShaftM
			{
				type = rotationY;
				selection = "bladeM01_joint_horizontal_axis";
				axis = "bladeM01_joint";
				angle1 = "rad -360";
			};
			class BladeM02_Joint_Horizontal_Axis: BladeM01_Joint_Horizontal_Axis {selection = "bladeM02_joint_horizontal_axis"; axis = "bladeM02_joint";};
			class BladeM03_Joint_Horizontal_Axis: BladeM01_Joint_Horizontal_Axis {selection = "bladeM03_joint_horizontal_axis"; axis = "bladeM03_joint";};
			class BladeM04_Joint_Horizontal_Axis: BladeM01_Joint_Horizontal_Axis {selection = "bladeM04_joint_horizontal_axis"; axis = "bladeM04_joint";};
			class BladeM05_Joint_Horizontal_Axis: BladeM01_Joint_Horizontal_Axis {selection = "bladeM05_joint_horizontal_axis"; axis = "bladeM05_joint";};

			class BladeM01_Dive
			{
				type = "rotationX";
				selection = "bladeM01_joint_vertical_axis";
				source = "cyclicForward";
				axis = "bladeM01_joint";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				angle0 = "rad 6";
				angle1 = "rad -6";
			};
			class BladeM02_Dive: BladeM01_Dive {selection = "bladeM02_joint_vertical_axis"; axis = "bladeM02_joint";};
			class BladeM03_Dive: BladeM01_Dive {selection = "bladeM03_joint_vertical_axis"; axis = "bladeM03_joint";};
			class BladeM04_Dive: BladeM01_Dive {selection = "bladeM04_joint_vertical_axis"; axis = "bladeM04_joint";};
			class BladeM05_Dive: BladeM01_Dive {selection = "bladeM05_joint_vertical_axis"; axis = "bladeM05_joint";};

			class BladeM01_Bank: BladeM01_Dive
			{
				type = "rotationZ";
				source = "cyclicAside";
				angle0 = "rad -6";
				angle1 = "rad 6";
			};
			class BladeM02_Bank: BladeM01_Bank {selection = "bladeM02_joint_vertical_axis"; axis = "bladeM02_joint";};
			class BladeM03_Bank: BladeM01_Bank {selection = "bladeM03_joint_vertical_axis"; axis = "bladeM03_joint";};
			class BladeM04_Bank: BladeM01_Bank {selection = "bladeM04_joint_vertical_axis"; axis = "bladeM04_joint";};
			class BladeM05_Bank: BladeM01_Bank {selection = "bladeM05_joint_vertical_axis"; axis = "bladeM05_joint";};

			class BladeM01_Blur_Rotation: RotorShaftM
			{
				selection = "bladeM01_blur_torque_axis";
				axis = "bladeM01_joint_vertical_axis";
				angle1 = "rad -360";
			};
			class BladeM02_Rotation: BladeM01_Blur_Rotation {selection = "bladeM02_blur_torque_axis"; axis = "bladeM02_joint_vertical_axis";};
			class BladeM03_Rotation: BladeM01_Blur_Rotation {selection = "bladeM03_blur_torque_axis"; axis = "bladeM03_joint_vertical_axis";};
			class BladeM04_Rotation: BladeM01_Blur_Rotation {selection = "bladeM04_blur_torque_axis"; axis = "bladeM04_joint_vertical_axis";};
			class BladeM05_Rotation: BladeM01_Blur_Rotation {selection = "bladeM05_blur_torque_axis"; axis = "bladeM05_joint_vertical_axis";};

			class BladeM01_Blur_Bend: Rotation
			{
				selection = "bladeM01_blur";
				source = torqueRTD;
				axis = "bladeM01_blur_torque_axis";
				angle1 = rad 4;
			};
			class BladeM02_Blur_Bend: BladeM01_Blur_Bend {selection = "bladeM02_blur"; axis = "bladeM02_blur_torque_axis";};
			class BladeM03_Blur_Bend: BladeM01_Blur_Bend {selection = "bladeM03_blur"; axis = "bladeM03_blur_torque_axis";};
			class BladeM04_Blur_Bend: BladeM01_Blur_Bend {selection = "bladeM04_blur"; axis = "bladeM04_blur_torque_axis";};
			class BladeM05_Blur_Bend: BladeM01_Blur_Bend {selection = "bladeM05_blur"; axis = "bladeM05_blur_torque_axis";};

			// << Main rotor
			class VRotor: Rotation
			{
				selection = "tail rotor";
				source = RotorV;
				axis = "tail_rotor_axis";
				angle1 = "rad 360";
			};

			#define STICK_ANGLE (rad 12)

			class stick_pilot_dive_01 // cyclic
			{
				type = "rotationX";
				source = "cyclicForward";
				axis = "stick_pilot_joint";
				selection = "stick_pilot";
				minValue = -0.499999;
				maxValue = 0.499999;
				angle0 = STICK_ANGLE / 3;
				angle1 = - STICK_ANGLE / 3;
			};
			class stick_pilot_dive_02: stick_pilot_dive_01 {minValue = -0.849999; maxValue = -0.5; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_03: stick_pilot_dive_01 {minValue = -1; maxValue = -0.85; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_04: stick_pilot_dive_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = - STICK_ANGLE / 3;};
			class stick_pilot_dive_05: stick_pilot_dive_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = - STICK_ANGLE / 3;};

			class stick_pilot_bank_01: stick_pilot_dive_01
			{
				type = "rotationZ";
				source = "cyclicAside";
				angle0 = - STICK_ANGLE / 3;
				angle1 = STICK_ANGLE / 3;
			};
			class stick_pilot_bank_02: stick_pilot_bank_01 {minValue = -0.849999; maxValue = -0.5; angle0 = - STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_03: stick_pilot_bank_01 {minValue = -1; maxValue = -0.85; angle0 = - STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_04: stick_pilot_bank_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = STICK_ANGLE / 3;};
			class stick_pilot_bank_05: stick_pilot_bank_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = STICK_ANGLE / 3;};

			class stick_copilot_dive01: stick_pilot_dive_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive02: stick_pilot_dive_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive03: stick_pilot_dive_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive04: stick_pilot_dive_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive05: stick_pilot_dive_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class stick_copilot_bank01: stick_pilot_bank_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank02: stick_pilot_bank_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank03: stick_pilot_bank_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank04: stick_pilot_bank_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank05: stick_pilot_bank_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class lever_pilot: rotation
			{
				source = "collectiveRTD";
				selection = "lever_pilot";
				axis = "lever_pilot_axis";
				angle0 = "rad -3";
				angle1 = "rad 12";
			};
			class lever_copilot: lever_pilot {selection = "lever_copilot"; axis = "lever_copilot_axis";};

			class BatteriesSwitch_On: Rotation
			{
				selection = s_batteries;
				source = batteriesSwitch_On;
				axis = s_batteries_axis;
				angle0 = "rad -10";
				angle1 = "rad 15";
			};
			class LightsACSwitch_On: Rotation
			{
				selection = s_lightsAC;
				source = lightsACSwitch_On;
				axis = s_lightsAC_axis;
				angle0 = "rad -10";
				angle1 = "rad 15";
			};
			class LightsLDGButton_On
			{
				selection = s_lightsLDG;
				source = lightsLDGButton_On;
				type = translation;
				axis = btns_axis;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 0.7;
			};
			class TrimButton_On
			{
				selection = s_trim;
				source = trimButton_On;
				type = translation;
				axis = btns_axis;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 0.7;
			};
			class RadioButton_On
			{
				selection = s_radio;
				source = radioButton_On;
				type = translation;
				axis = btns_axis;
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 0.15;
			};

			class pedalL: Rotation
			{
				//source = "rudderRTD";
				source = "rudder";
				axis = "pedals_axis";
				selection = "pedalL";
				minValue = -1;
				maxValue = 1;
				angle0 = "rad -15";
				angle1 = "rad 15";
			};
			class pedalR: pedalL
			{
				selection = "pedalR";
				angle0 = "rad 15";
				angle1 = "rad -15";
			};

			class Throttle01_01: Rotation
			{
				selection = "throttle_pilot";
				//source = "throttleRTD1";
				source = "vertSpeed";
				axis = "throttle_pilot_axis";
				minValue = 0;
				maxValue = 0.12;
				angle0 = "rad 0";
				angle1 = "rad 20";
			};
			class Throttle01_02: Throttle01_01
			{
				minValue = 0.16;
				maxValue = 1;
				angle1 = "rad 50";
			};
			class ThrottleSwitch01: Throttle01_01
			{
				type = translation;
				selection = "throttle_switch_pilot";
				minValue = 0.13;
				maxValue = 0.15;
				offset0 = 0;
				offset1 = -0.04;
			};

			// >> Indicators
			class I_Speed: Rotation
			{
				selection = i_speed;
				//source = airSpeedIndicatorRTD;
				source = speed;
				axis = i_speed_axis;
				maxValue = 10.288889;
				angle0 = "rad -2";
				angle1 = "rad 11";
			};
			class I_Bank: Rotation
			{
				selection = i_bank;
				//source = attitudeBankRTD;
				source = horizonBank;
				axis = i_bank_axis;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
			};
			class I_Altitude_100f: Rotation
			{
				selection = i_alt_100f;
				//source = altBaroRTD;
				source = altBaro;
				sourceAddress = loop;
				axis = i_altitude_axis;
				minValue = 0;
				maxValue = 304.8;
				angle0 = 0;
				angle1 = rad 360;
			};
			class I_Altitude_1000f: I_Altitude_100f
			{
				selection = i_alt_1000f;
				maxValue = 3048;
			};
			class I_Altitude_10000f: I_Altitude_100f
			{
				selection = i_alt_10000f;
				maxValue = 30480;
			};
			class I_RPM: Rotation
			{
				selection = i_rpm;
				//source = rpm1RTD;
				source = rpm;
				axis = i_rpm_axis;
				maxValue = 1.2;
				angle0 = "rad 18";
				angle1 = "rad 319";
			};
			class I_Compass: Rotation
			{
				selection = i_compass;
				source = direction;
				axis = i_compass_axis;
				minValue = "rad -180";
				maxValue = "rad 180";
				angle0 = "rad -180";
				angle1 = "rad 180";
			};
			class I_WP: Rotation
			{
				selection = i_wp;
				source = waypointDirection;
				axis = i_compass_axis;
				minValue = "rad -180";
				maxValue = "rad 180";
				angle0 = "rad -180";
				angle1 = "rad 180";
			};
			class I_VSpeed: Rotation
			{
				selection = i_vspeed;
				//source = vertSpeedRTD;
				source = vertSpeed;
				axis = i_vspeed_axis;
				minValue = -15.240;
				maxValue = +15.240;
				angle0 = "rad - 264";
				angle1 = "rad 82";
			};
			class I_Torque: Rotation
			{
				selection = i_torque;
				source = torqueRTD;
				axis = i_torque_axis;
				maxValue = 1.1;
				angle0 = "rad - 190";
				angle1 = "rad 112";
			};
			class I_Fuel: Rotation
			{
				selection = i_fuel;
				source = fuel;
				axis = i_fuel_axis;
				maxValue = 0.249999;
				angle0 = "rad -53";
				angle1 = "rad -20";
			};

			class I_Minute: Rotation
			{
				selection = i_minute;
				source = clockMinute;
				axis = i_clock_axis;
				angle1 = "rad 360";
			};
			class I_Hour: I_Minute
			{
				selection = i_hour;
				source = clockHour;
			};
			class I_OilTemp: Rotation
			{
				selection = i_oilTemp;
				//source = temp1RTD;
				source = oil;
				axis = i_oilTemp_axis;
				minValue = 0.1;
				maxValue = 1;
				angle0 = "rad -56";
				angle1 = "rad 28";
			};

			class I_OilPress: Rotation
			{
				selection = i_oilPress;
				source = HitEngine;
				axis = i_oilPress_axis;
				angle0 = "rad 10";
				angle1 = "rad -133";
			};
			class I_TOT: Rotation
			{
				selection = i_TOT;
				source = temp1RTD;
				axis = i_TOT_axis;
				minValue = 1/7.5;
				maxValue = 1/7.5*4;
				angle0 = "rad -112";
				angle1 = "rad -79";
			};
			class I_Temp: Rotation
			{
				selection = "i_temp";
				//source = altBaroRTD;
				source = altBaro;
				axis = "i_temp_axis";
				minValue = 0;
				maxValue = 5400;
				angle0 = "rad 2.5";
				angle1 = "rad 105";
			};
			class I_AC: Rotation
			{
				selection = "i_ac";
				source = bateryChargeRTD;
				axis = "i_ac_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad 180";
			};
			// << Indicators

			class DamageHide
			{
				type = "hide";
				source = "damage";
				selection = "damageHide";
			};

			// >> Damage
			class HitHRotor: Hide
			{
				selection = rotorshaftM;
				source = HitHRotor;
			};
			class HitVRotor: Hide
			{
				selection = tail rotor;
				source = HitVRotor;
			};
			// << Damage
		};
	};

	class CAF_CH146_BASE : Helicopter_H
	{
		
		sectionsInherit = "Helicopter_H";
		sections[]=
		{
			"camo1", "camo2", "camo3", "camo4"
		};
		skeletonName = "CAF_CH146_BASE";
		class Animations: Animations
		{
			// >> Main rotor
			class BladeM01_Dive: BladeM01_Dive {angle0 = "rad 10"; angle1 = "rad -10";};
			class BladeM02_Dive: BladeM02_Dive {angle0 = "rad 10"; angle1 = "rad -10";};
			class BladeM03_Dive: BladeM03_Dive {angle0 = "rad 10"; angle1 = "rad -10";};
			class BladeM04_Dive: BladeM04_Dive {angle0 = "rad 10"; angle1 = "rad -10";};

			class BladeM01_Bank: BladeM01_Bank {angle0 = "rad -10"; angle1 = "rad 10";};
			class BladeM02_Bank: BladeM02_Bank {angle0 = "rad -10"; angle1 = "rad 10";};
			class BladeM03_Bank: BladeM03_Bank {angle0 = "rad -10"; angle1 = "rad 10";};
			class BladeM04_Bank: BladeM04_Bank {angle0 = "rad -10"; angle1 = "rad 10";};

			class BladeM01_Collective: BladeM01_Collective {angle0 = "rad 0"; angle1 = "rad 15";};
			class BladeM02_Collective: BladeM02_Collective {angle0 = "rad 0"; angle1 = "rad 15";};
			class BladeM03_Collective: BladeM03_Collective {angle0 = "rad 0"; angle1 = "rad 15";};
			class BladeM04_Collective: BladeM04_Collective {angle0 = "rad 0"; angle1 = "rad 15";};

			class SwashPlate_Rotation: Rotation
			{
				selection = "swashPlate";
				source = RotorH;
				axis = "swashPlate_axis";
				angle1 = "rad 360";
			};
			class SwashPlate02_Rotation: SwashPlate_Rotation {selection = "swashPlate02"; axis = "swashPlate02_axis";};

			class SwashPlate_Dive
			{
				type = "rotationX";
				selection = "swashPlate";
				source = "cyclicForward";
				axis = "swashPlate_axis";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				angle0 = "rad 5";
				angle1 = "rad -5";
			};
			class SwashPlate_Bank: SwashPlate_Dive
			{
				type = "rotationZ";
				source = "cyclicAside";
				angle0 = "rad -5";
				angle1 = "rad 5";
			};

			class SwashPlate_Dive02: SwashPlate_Dive {selection = "swashPlate02"; axis = "swashPlate02_axis";};
			class SwashPlate_Bank02: SwashPlate_Bank {selection = "swashPlate02"; axis = "swashPlate02_axis";};

			#define BLADE_BEND -0.6
			class BladeM01_Bend: BladeM01_Bend {offset1 = BLADE_BEND;};
			class BladeM02_Bend: BladeM02_Bend {offset1 = BLADE_BEND;};
			class BladeM03_Bend: BladeM03_Bend {offset1 = BLADE_BEND;};
			class BladeM04_Bend: BladeM04_Bend {offset1 = BLADE_BEND;};
			class BladeM05_Bend: BladeM05_Bend {offset1 = BLADE_BEND;};
			// << Main rotor

			// >> Indicators
			class I_Speed: I_Speed
			{
				minValue = 0;
				maxValue = 10.288889;
				angle0 = 0;
				angle1 = "rad 8";
			};
			class I_Speed_02: I_Speed {minValue = 10.288890; maxValue = 15.433333; angle1 = "rad 30";};
			class I_Speed_03: I_Speed {minValue = 15.433334; maxValue = 25.722222; angle1 = "rad 90";};
			class I_Speed_04: I_Speed {minValue = 25.722223; maxValue = 46.300000; angle1 = "rad 80";};
			class I_Speed_05: I_Speed {minValue = 46.300001; maxValue = 72.022222; angle1 = "rad 115";};
			class I_Speed_06: I_Speed {minValue = 72.022223; maxValue = 77.166667; angle1 = "rad 22";};

			class I_Speed02: I_Speed {selection = "i_speed02"; axis = "i_speed02_axis";};
			class I_Speed02_02: I_Speed_02 {selection = "i_speed02"; axis = "i_speed02_axis";};
			class I_Speed02_03: I_Speed_03 {selection = "i_speed02"; axis = "i_speed02_axis";};
			class I_Speed02_04: I_Speed_04 {selection = "i_speed02"; axis = "i_speed02_axis";};
			class I_Speed02_05: I_Speed_05 {selection = "i_speed02"; axis = "i_speed02_axis";};
			class I_Speed02_06: I_Speed_06 {selection = "i_speed02"; axis = "i_speed02_axis";};

			class I_RPM: I_RPM
			{
				maxValue = 1.2;
				angle0 = 0;
				angle1 = "rad 328";
			};
			class I_RPMB: I_RPM {selection = "i_rpmB"; source = rpm;};
			class I_RPM02: I_RPM {selection = "i_rpm02"; axis = "i_rpm02_axis";};
			class I_RPM02B: I_RPMB {selection = "i_rpm02B"; axis = "i_rpm02_axis";};

			class I_VSpeed: I_VSpeed
			{
				minValue = -5.080000;
				maxValue = 5.080000;
				angle0 = "rad -70";
				angle1 = "rad 70";
			};
			class I_VSpeed_02a: I_VSpeed {minValue = 5.080001; maxValue = 15.240000; angle0 = 0; angle1 = "rad 77";};
			class I_VSpeed_02b: I_VSpeed {minValue = -15.240000; maxValue = -5.080001; angle0 = "rad -77"; angle1 = 0;};
			class I_VSpeed_03a: I_VSpeed {minValue = 15.240001; maxValue = 20.320000; angle0 = 0; angle1 = "rad 26";};
			class I_VSpeed_03b: I_VSpeed {minValue = -20.320000; maxValue = -15.240001; angle0 = "rad -26";	angle1 = 0;};

			class I_VSpeed02: I_VSpeed {selection = "i_vspeed02"; axis = "i_vspeed02_axis";};
			class I_VSpeed02_02a: I_VSpeed_02a {selection = "i_vspeed02"; axis = "i_vspeed02_axis";};
			class I_VSpeed02_02b: I_VSpeed_02b {selection = "i_vspeed02"; axis = "i_vspeed02_axis";};
			class I_VSpeed02_03a: I_VSpeed_03a {selection = "i_vspeed02"; axis = "i_vspeed02_axis";};
			class I_VSpeed02_03b: I_VSpeed_03b {selection = "i_vspeed02"; axis = "i_vspeed02_axis";};

			class i_horizontSphere_bank
			{
				selection = "i_horizontSphere";
				type = rotationZ;
				source = horizonBank;
				axis = "i_horizontSphere_axis";
				memory = 1;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad +360";
				angle1 = "rad -360";
			};
			class i_horizontSphere_dive: i_horizontSphere_bank
			{
				type = rotationX;
				source = horizonDive;
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad -45";
				angle1 = "rad +45";
			};
			class i_horizontSphere02_bank: i_horizontSphere_bank {selection = "i_horizontSphere02"; axis = "i_horizontSphere02_axis";};
			class i_horizontSphere02_dive: i_horizontSphere_dive {selection = "i_horizontSphere02"; axis = "i_horizontSphere02_axis";};

			class I_Compass02: I_Compass
			{
				selection = i_compass02;
				axis = i_compass02_axis;
			};
			class I_WP02: I_WP
			{
				selection = i_wp02;
				axis = i_compass02_axis;
			};

			class I_Altitude02_100f: I_Altitude_100f
			{
				selection = i_alt02_100f;
				axis = i_altitude02_axis;
			};

			class I_Altitude_1000f: I_Altitude_1000f
			{
				sourceAddress = clamp;
				minValue = 304.8 - 30.48;
				maxValue = 304.8;
				angle1 = rad 36;
			};
			class I_Altitude02_1000f: I_Altitude_1000f
			{
				selection = i_alt02_1000f;
				axis = i_altitude02_axis;
			};
			ALTITUDE_1000F(2)
			ALTITUDE_1000F(3)
			ALTITUDE_1000F(4)
			ALTITUDE_1000F(5)
			ALTITUDE_1000F(6)
			ALTITUDE_1000F(7)
			ALTITUDE_1000F(8)
			ALTITUDE_1000F(9)
			ALTITUDE_1000F(10)
			ALTITUDE_1000F(11)
			ALTITUDE_1000F(12)
			ALTITUDE_1000F(13)
			ALTITUDE_1000F(14)
			ALTITUDE_1000F(15)
			ALTITUDE_1000F(16)
			ALTITUDE_1000F(17)
			ALTITUDE_1000F(18)
			ALTITUDE_1000F(19)
			ALTITUDE_1000F(20)
			ALTITUDE_1000F(21)
			ALTITUDE_1000F(22)
			ALTITUDE_1000F(23)
			ALTITUDE_1000F(24)
			ALTITUDE_1000F(25)
			ALTITUDE_1000F(26)
			ALTITUDE_1000F(27)
			ALTITUDE_1000F(28)
			ALTITUDE_1000F(29)
			ALTITUDE_1000F(30)
			ALTITUDE_1000F(31)
			ALTITUDE_1000F(32)

			class I_Altitude_10000f: I_Altitude_10000f
			{
				sourceAddress = clamp;
				minValue = 3048 - 30.48;
				maxValue = 3048;
				angle1 = rad 36;
			};
			class I_Altitude02_10000f: I_Altitude_10000f
			{
				selection = i_alt02_10000f;
				axis = i_altitude02_axis;
			};
			ALTITUDE_10000F(2)
			ALTITUDE_10000F(3)

			class I_AltitudeA_100f: I_Altitude_100f
			{
				selection = i_altA_100f;
				axis = i_altitudeA_100f_axis;
			};
			class I_Altitude02A_100f: I_Altitude_100f {selection = i_alt02A_100f; axis = i_altitude02A_100f_axis;};

			class I_AltitudeB_100f: I_Altitude_100f
			{
				selection = i_altB_100f;
				source = altRadarRTD;
				sourceAddress = clamp;
				axis = i_altitudeB_100f_axis;
				maxValue = 60.96;
				angle1 = "rad 180";
			};
			class I_AltitudeB_100f_02: I_AltitudeB_100f {minValue = 60.960001; maxValue = 152.4; angle1 = "rad 25";};
			class I_AltitudeB_100f_03: I_AltitudeB_100f {minValue = 152.400001; maxValue = 457.2; angle1 = "rad 85";};

			class I_Altitude02B_100f: I_AltitudeB_100f {selection = i_alt02B_100f; axis = i_altitude02B_100f_axis;};
			class I_Altitude02B_100f_02: I_AltitudeB_100f_02 {selection = i_alt02B_100f; axis = i_altitude02B_100f_axis;};
			class I_Altitude02B_100f_03: I_AltitudeB_100f_03 {selection = i_alt02B_100f; axis = i_altitude02B_100f_axis;};

			class I_Horizont
			{
				selection = "i_horizont";
				type = translation;
				source = horizonDive;
				axis = "i_horizont_axis";
				memory = 1;
				minValue = "rad -25.714286";
				maxValue = "rad 25.714286";
				offset0 = -0.27;  //42
				offset1 = 0.27;
			};

			class I_Torque: I_Torque
			{
				minValue = 0.1;
				maxValue = 0.55;
				angle0 = 0;
				angle1 = "rad 150";
			};
			class I_TorqueB: I_Torque
			{
				selection = "i_torqueB";
				source = torqueEng1RTD;
				minValue = 0;
				maxValue = 0.5;
				angle0 = 0;
				angle1 = "rad - 150";
			};
			class I_TorqueC: I_TorqueB {selection = "i_torqueC"; source = torqueEng2RTD;};

			class I_Torque02:  I_Torque  {selection = "i_torque02";  axis = "i_torque02_axis";};
			class I_Torque02B: I_TorqueB {selection = "i_torque02B"; axis = "i_torque02_axis";};
			class I_Torque02C: I_TorqueC {selection = "i_torque02C"; axis = "i_torque02_axis";};

			class I_Fuel: I_Fuel
			{
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad 108";
			};
			class I_Fuel02: I_Fuel {selection = "i_fuel02"; axis = "i_fuel02_axis"; angle1 = "rad 102";};

			class I_Gas: Rotation
			{
				selection = "i_gas";
				source = "rpm";
				axis = "i_gas_axis";
				maxValue = 1.1;
				angle1 = "rad 297";
			};
			class I_Gas02: I_Gas {selection = "i_gas02"; axis = "i_gas02_axis"; source = "rpm";};

			class I_TOT: I_TOT {minValue = 1/8*2.5; maxValue = 1/8*7; angle0 = "rad 22"; angle1 = "rad 112";};
			class I_TOT_02: I_TOT {minValue = 1/8*7+0.000001; maxValue = 1/8*10; angle0 = 0; angle1 = "rad 219";};
			class I_TOT_03: I_TOT_02 {minValue = 1/8*10+0.000001; maxValue = 1.3; angle1 = "rad 19";};

			class I_TOT02: I_TOT {source = temp2RTD; selection = "i_TOT02"; axis = "i_TOT02_axis";};
			class I_TOT02_02: I_TOT_02 {source = temp2RTD; selection = "i_TOT02"; axis = "i_TOT02_axis";};
			class I_TOT02_03: I_TOT_03 {source = temp2RTD; selection = "i_TOT02"; axis = "i_TOT02_axis";};

			class I_OilTemp: I_OilTemp {minValue = 0; maxValue = 1.3; angle0 = 0; angle1 = "rad 85";};
			class I_OilTemp02: I_OilTemp {source = oil; selection = "i_oilTemp02"; axis = "i_oilTemp02_axis";};
			class I_OilTemp03: I_OilTemp {selection = "i_oilTemp03"; axis = "i_oilTemp03_axis"; angle1 = rad 82;};
			class I_OilTemp04: I_OilTemp02 {selection = "i_oilTemp04"; axis = "i_oilTemp04_axis"; angle1 = rad 82;};
			class I_OilTemp05: I_OilTemp03 {selection = "i_oilTemp05"; axis = "i_oilTemp05_axis";};
			class I_OilTemp06: I_OilTemp04 {selection = "i_oilTemp06"; axis = "i_oilTemp06_axis";};

			class I_DC: Rotation
			{
				selection = "i_dc";
				source = rpm;
				axis = "i_dc_axis";
				minValue = 0.5;
				maxValue = 1;
				angle0 = "rad -50";
				angle1 = "rad 30";
			};
			class I_DC02: I_DC {selection = "i_dc02"; source = rpm; axis = "i_DC02_axis";};

			class I_AC: I_AC
			{
				angle0 = "rad -50";
				angle1 = "rad 80";
			};
			class I_AC02: I_AC {selection = "i_ac02"; axis = "i_ac02_axis";};

			class I_OilPress: I_OilPress {minValue = 0; angle0 = "rad -75"; angle1 = "rad 0";};
			class I_OilPress02: I_OilPress {selection = "i_oilPress02"; source = HitEngine2; axis = "i_oilPress02_axis";};

			class I_FuelPress: I_OilPress {selection = "i_fuelPress"; axis = "i_fuelPress_axis"; angle0 = "rad 140"; angle1 = 0;};
			class I_FuelPress02: I_OilPress02 {selection = "i_fuelPress02"; axis = "i_fuelPress02_axis"; angle0 = "rad 140"; angle1 = 0;};

			class I_TransPress: Rotation
			{
				selection = "i_transPress";
				source = HitTransmission;
				axis = "i_transPress_axis";
				angle0 = "rad -65";
				angle1 = "rad 4";
			};
			class I_TransPress02: I_TransPress {selection = "i_transPress02"; axis = "i_transPress02_axis";};

			class I_HydrPress: Rotation
			{
				selection = "i_hydrPress";
				source = HitHydraulics;
				axis = "i_hydrPress_axis";
				angle0 = "rad -72";
				angle1 = "rad 4";
			};
			class I_HydrPress02: I_HydrPress {selection = "i_hydrPress02"; axis = "i_hydrPress02_axis";};
			// << Indicators

			// >> Doors & Hatches
			class DoorL1_Open: Rotation
			{
				selection = "doorL1";
				source = DoorL1_Open;
				axis = "doorL1_axis";
				angle1 = "rad 85";
			};
			class DoorR1_Open: DoorL1_Open
			{
				selection = "doorR1";
				source = DoorR1_Open;
				axis = "doorR1_axis";
				angle1 = "rad -85";
			};
			class DoorL2_Open: Rotation
			{
				selection = "doorL2";
				source = DoorL2_Open;
				axis = "doorL2_axis";
				angle1 = "rad 65";
			};
			class DoorR2_Open: DoorL2_Open
			{
				selection = "doorR2";
				source = DoorR2_Open;
				axis = "doorR2_axis";
				angle1 = "rad -65";
			};
			class DoorL3_Open: Rotation
			{
				selection = "doorL3";
				source = DoorL3_Open;
				axis = "doorL3_axis";
				angle1 = "rad -15";
			};
			class DoorR3_Open: DoorL3_Open
			{
				selection = "doorR3";
				source = DoorR3_Open;
				axis = "doorR3_axis";
				angle1 = "rad 15";
			};

			class Inspect_Panel1_1: Rotation
			{
				selection = "hatchL";
				source = Inspect_Panel1_1;
				axis = "hatchL_axis";
				angle1 = "rad -95";
			};
			class Inspect_Panel2_1: Inspect_Panel1_1
			{
				selection = "hatchR";
				source = Inspect_Panel2_1;
				axis = "hatchR_axis";
				angle1 = "rad 95";
			};
			class RotorCover_Hide: Hide
			{
				selection = "rotorCover";
				source = RotorCover_Hide;
				hideValue = 0.5;
			};
			// << Doors & Hatches

			// tilt compensation for hover
			class BladeM01_Joint_Bank_Tilt : BladeM01_Joint_Bank_Tilt
			{
				angle1 = "rad 2.4";
			};
			class BladeM02_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM02_bank_tilt"; axis = "bladeM02_joint";};
			class BladeM03_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM03_bank_tilt"; axis = "bladeM03_joint";};
			class BladeM04_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM04_bank_tilt"; axis = "bladeM04_joint";};
			class BladeM05_Joint_Bank_Tilt: BladeM01_Joint_Bank_Tilt {selection = "bladeM05_bank_tilt"; axis = "bladeM05_joint";};
			class BladeM01_Joint_Dive_Tilt : BladeM01_Joint_Dive_Tilt
			{
				angle1 = "rad -5";
			};
			class BladeM02_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM02_dive_tilt"; axis = "bladeM02_joint";};
			class BladeM03_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM03_dive_tilt"; axis = "bladeM03_joint";};
			class BladeM04_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM04_dive_tilt"; axis = "bladeM04_joint";};
			class BladeM05_Joint_Dive_Tilt: BladeM01_Joint_Dive_Tilt {selection = "bladeM05_dive_tilt"; axis = "bladeM05_joint";};

		};
	};
	class CAF_CH146_CAS: CAF_CH146_BASE
	{
		sectionsInherit = CAF_CH146_BASE;
		sections[] = {"zaslehL", "zaslehR"};
		skeletonName = CAF_CH146_CAS;

		class Animations: Animations
		{

			class FLIR_HRot
			{
			    type = "rotation";
			    source = "FLIR_HRot";
			    selection = "z_FLIR_HRot";
			    axis = "z_FLIR_HRot_axis";
			    memory = 1;
			    minValue = "rad -360";
			    maxValue = "rad +360";
			    angle0 = "rad +360";
			    angle1 = "rad -360";
			};
			class FLIR_VRot: FLIR_HRot
			{
			    source = "FLIR_VRot";
			    selection = "z_FLIR_VRot";
			    axis = "z_FLIR_VRot_axis";
			};

			class MachineGun: Rotation
			{
				selection="gatling_1";
				axis="gatling_1_axis";
				angle1="-600 * 3.141592654";
				source="gatling_1";
			};
			class MachineGun_1: Rotation
			{
				selection="gatling_2";
				axis="gatling_2_axis";
				angle1="-600 * 3.141592654";
				source="gatling_2";
			};
		};
	};
	
	class bell412 : CAF_CH146_BASE {
	
		sectionsInherit = CAF_CH146_BASE;
		sections[] = {"zaslehL", "zaslehR","numbers"};
		skeletonName = CAF_CH146_TRANS;

		class Animations: Animations
		{
			class extendHookLeft : Rotation
			{
			    source = "extendHookLeft";
			    selection = "l_gantry";
			    axis = "axis_l_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad -90";
			};
			class extendHookRight : extendHookLeft
			{
			    source = "extendHookRight";
			    selection = "r_gantry";
			    axis = "axis_r_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad +90";
			};
			class FLIR_HRot
			{
			    type = "rotation";
			    source = "FLIR_HRot";
			    selection = "z_FLIR_HRot";
			    axis = "z_FLIR_HRot_axis";
			    memory = 1;
			    minValue = "rad -360";
			    maxValue = "rad +360";
			    angle0 = "rad -360";
			    angle1 = "rad +360";
			};
			class FLIR_VRot: FLIR_HRot
			{
			    source = "FLIR_VRot";
			    selection = "z_FLIR_VRot";
			    axis = "z_FLIR_VRot_axis";
			};

			class GunL_HRot
			{
			    selection = "z_gunL_HRot";
			    source = GunL_HRot;
			    type = "rotation";
			    axis = "z_gunL_HRot_axis";
			    animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class GunL_VRot: GunL_HRot
			{
				selection = "z_gunL_VRot";
				source = GunL_VRot;
				axis = "z_gunL_VRot_axis";
			};
			class GunL_Revolving: Rotation
			{
				selection = "z_gatlingL";
				source = GunL_Revolving;
				axis = "z_gatlingL_axis";
				angle1 = "rad 120000*3";
			};
			class GunR_HRot: GunL_HRot 
			{
				selection = "z_gunR_HRot"; 
				source = "GunR_HRot"; 
				axis = "z_gunR_HRot_axis";
			};
			class GunR_VRot: GunL_HRot 
			{
				selection = "z_gunR_VRot"; 
				source = "GunR_VRot"; 
				axis = "z_gunR_VRot_axis";
			};
			class GunR_Revolving: GunL_Revolving 
			{
				selection = "z_gatlingR";	
				source = GunR_Revolving; 
				axis = "z_gatlingR_axis";
			};
			class DoorL1_Open: Rotation
			{
				selection = "doorL1";
				source = DoorL1_Open;
				axis = "doorL1_axis";
				angle1 = "rad 85";
			};
			class DoorR1_Open: DoorL1_Open
			{
				selection = "doorR1";
				source = DoorR1_Open;
				axis = "doorR1_axis";
				angle1 = "rad -85";
			};
			class hidePG_1
			{
				type = "hide";
				selection = "rocket1";
				animPeriod=0;
				source="Missiles_revolving";
				sourceAddress="mirror";
				minValue=-1.000000;
				maxValue= 0.000000;
				hideValue=(11/12)+0.0000001;			
			};
			class hidePG_2: hidePG_1
			{
				selection = "rocket2";
				hideValue=(10/12)+0.0000001;
			};
			class hidePG_3: hidePG_1
			{
				selection = "rocket3";
				hideValue=(9/12)+0.0000001;
			};
			class hidePG_4: hidePG_1
			{
				selection = "rocket4";
				hideValue=(8/12)+0.0000001;
			};
			class hidePG_5: hidePG_1
			{
				selection = "rocket5";
				hideValue=(7/12)+0.0000001;
			};
			class hidePG_6: hidePG_1
			{
				selection = "rocket6";
				hideValue=(6/12)+0.0000001;
			};
			class hidePG_7: hidePG_1
			{
				selection = "rocket7";
				hideValue=(5/12)+0.0000001;
			};
		};
	};
	class bell412c6 : CAF_CH146_BASE {
	
		sectionsInherit = CAF_CH146_BASE;
		sections[] = {"zaslehL", "zaslehR","numbers"};
		skeletonName = CAF_CH146_C6;

		class Animations: Animations
		{
			class extendHookLeft : Rotation
			{
			    source = "extendHookLeft";
			    selection = "l_gantry";
			    axis = "axis_l_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad -90";
			};
			class extendHookRight : extendHookLeft
			{
			    source = "extendHookRight";
			    selection = "r_gantry";
			    axis = "axis_r_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad +90";
			};
			class FLIR_HRot
			{
			    type = "rotation";
			    source = "FLIR_HRot";
			    selection = "z_FLIR_HRot";
			    axis = "z_FLIR_HRot_axis";
			    memory = 1;
			    minValue = "rad -360";
			    maxValue = "rad +360";
			    angle0 = "rad -360";
			    angle1 = "rad +360";
			};
			class FLIR_VRot: FLIR_HRot
			{
			    source = "FLIR_VRot";
			    selection = "z_FLIR_VRot";
			    axis = "z_FLIR_VRot_axis";
			};

			class MainTurret
			{
				type="rotation";
				source="mainTurret";
				selection="OtocVez";
				axis="OsaVeze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class Turret_2: MainTurret
			{
				source="Turret_2";
				selection="otocvez_1";
				axis="OsaVeze_1";
			};
			class MainGun: MainTurret
			{
				source="mainGun";
				selection="OtocHlaven";
				axis="OsaHlavne";
			};
			class Gun_2: MainTurret
			{
				source="Gun_2";
				selection="otochlaven_1";
				axis="OsaHlavne_1";
			};
			//Guns end
			//Guns anim
			class ammo_belt_rotation
			{
				type="rotation";
				selection="ammo_belt";
				source="ReloadAnim";
				axis="ammo_belt_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0.000000;
				angle1=-0.209440;
			};
			class feedtray_cover_up
			{
				type="rotation";
				source="reloadMagazine";
				selection="feedtray_cover";
				axis="feedtray_cover_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.0500000;
				angle0=0.000000;
				angle1=1.570796;
			};
			class feedtray_cover_down:feedtray_cover_up
			{
				minValue=0.950000;
				maxValue=1.000000;
				angle0=0.000000;
				angle1=-1.570796;
			};
			class Turret_shake:ammo_belt_rotation
			{
				type="translation";
				sourceAddress="mirror";
				selection="OtocHlaven_Shake";
				axis="osaveze";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside:Turret_shake
			{
				axis="osahlavne";
				maxValue=0.05*1.3;
				offset0=0;
				offset1=-0.02;
			};
			class Magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="magazine";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};

			BULLET_HIDE(001,8,100)
			BULLET_HIDE(002,8,100)
			BULLET_HIDE(003,8,100)
			BULLET_HIDE(004,8,100)
			BULLET_HIDE(005,8,100)
			BULLET_HIDE(006,8,100)
			BULLET_HIDE(007,8,100)
			BULLET_HIDE(008,8,100)

			class Bolt_recoil
			{
				type="translation";
				selection="bolt";
				source="ReloadAnim";
				axis="bolt_axis";
				memory=1;
				sourceAddress="mirror";
				minValue=0;
				maxValue=0.45;
				offset0=0;
				offset1=-0.2;
			};
			class Bolt_reload_begin:Bolt_recoil
			{
				type="translation";
				sourceAddress="clamp";
				source="reloadMagazine";
				minValue=0.00000;
				maxValue=0.0200000;
			};
			class Bolt_reload_end:bolt_reload_begin
			{
				minValue=0.050000;
				maxValue=0.060000;
				offset0=0;
				offset1=0.2;
			};

			class ammo_belt_rotation_2
			{
				type="rotation";
				selection="ammo_belt_2";
				source="ReloadAnim_2";
				axis="ammo_belt_2_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0.000000;
				angle1=7.5*3.14159265358/180;
			};
			class feedtray_cover_up_2
			{
				type="rotation";
				source="reloadMagazine_2";
				selection="feedtray_cover_2";
				axis="feedtray_cover_2_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.0500000;
				angle0=0.000000;
				angle1=1.570796;
			};
			class feedtray_cover_down_2:feedtray_cover_up_2
			{
				minValue=0.950000;
				maxValue=1.000000;
				angle0=0.000000;
				angle1=-1.570796;
			};
			class Turret_shake_2:ammo_belt_rotation_2
			{
				type="translation";
				sourceAddress="mirror";
				selection="OtocHlaven_1_Shake";
				axis="osaveze";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside_2:Turret_shake_2
			{
				axis="osahlavne_1";
				maxValue=0.05*1.3;
				offset0=0;
				offset1=-0.02;
			};
			class Magazine_hide_2
			{
				type="hide";
				source="reloadMagazine_2";
				sourceAddress="mirror";
				selection="magazine_2";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};

			BULLET_HIDE_2nd(001,8,100)
			BULLET_HIDE_2nd(002,8,100)
			BULLET_HIDE_2nd(003,8,100)
			BULLET_HIDE_2nd(004,8,100)
			BULLET_HIDE_2nd(005,8,100)
			BULLET_HIDE_2nd(006,8,100)
			BULLET_HIDE_2nd(007,8,100)
			BULLET_HIDE_2nd(008,8,100)

			class Bolt_recoil_2
			{
				type="translation";
				selection="bolt_2";
				source="ReloadAnim_2";
				axis="bolt_2_axis";
				memory=1;
				sourceAddress="mirror";
				minValue=0;
				maxValue=0.45;
				offset0=0;
				offset1=-0.2;
			};
			class Bolt_reload_begin_2:Bolt_recoil_2
			{
				type="translation";
				sourceAddress="clamp";
				source="reloadMagazine_2";
				minValue=0.00000;
				maxValue=0.0200000;
			};
			class Bolt_reload_end_2:bolt_reload_begin_2
			{
				minValue=0.050000;
				maxValue=0.060000;
				offset0=0;
				offset1=0.2;
			};
			//Guns anim end
			class DoorL1_Open: Rotation
			{
				selection = "doorL1";
				source = DoorL1_Open;
				axis = "doorL1_axis";
				angle1 = "rad 85";
			};
			class DoorR1_Open: DoorL1_Open
			{
				selection = "doorR1";
				source = DoorR1_Open;
				axis = "doorR1_axis";
				angle1 = "rad -85";
			};
			class hidePG_1
			{
				type = "hide";
				selection = "rocket1";
				animPeriod=0;
				source="Missiles_revolving";
				sourceAddress="mirror";
				minValue=-1.000000;
				maxValue= 0.000000;
				hideValue=(11/12)+0.0000001;			
			};
			class hidePG_2: hidePG_1
			{
				selection = "rocket2";
				hideValue=(10/12)+0.0000001;
			};
			class hidePG_3: hidePG_1
			{
				selection = "rocket3";
				hideValue=(9/12)+0.0000001;
			};
			class hidePG_4: hidePG_1
			{
				selection = "rocket4";
				hideValue=(8/12)+0.0000001;
			};
			class hidePG_5: hidePG_1
			{
				selection = "rocket5";
				hideValue=(7/12)+0.0000001;
			};
			class hidePG_6: hidePG_1
			{
				selection = "rocket6";
				hideValue=(6/12)+0.0000001;
			};
			class hidePG_7: hidePG_1
			{
				selection = "rocket7";
				hideValue=(5/12)+0.0000001;
			};
		};
	};
	class bell412X : CAF_CH146_BASE {
	
		sectionsInherit = CAF_CH146_BASE;
		sections[] = {"numbers"};
		skeletonName = CAF_CH146_TRANS;

		class Animations: Animations
		{
			class extendHookLeft : Rotation
			{
			    source = "extendHookLeft";
			    selection = "l_gantry";
			    axis = "axis_l_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad -90";
			};
			class extendHookRight : extendHookLeft
			{
			    source = "extendHookRight";
			    selection = "r_gantry";
			    axis = "axis_r_gantry";
			    memory = 1;
			    minValue = "0";
			    maxValue = "1";
			    angle0 = "0";
			    angle1 = "rad +90";
			};
			class FLIR_HRot
			{
			    type = "rotation";
			    source = "FLIR_HRot";
			    selection = "z_FLIR_HRot";
			    axis = "z_FLIR_HRot_axis";
			    memory = 1;
			    minValue = "rad -360";
			    maxValue = "rad +360";
			    angle0 = "rad -360";
			    angle1 = "rad +360";
			};
			class FLIR_VRot: FLIR_HRot
			{
			    source = "FLIR_VRot";
			    selection = "z_FLIR_VRot";
			    axis = "z_FLIR_VRot_axis";
			};
		
			class DoorL1_Open: Rotation
			{
				selection = "doorL1";
				source = DoorL1_Open;
				axis = "doorL1_axis";
				angle1 = "rad 85";
			};
			class DoorR1_Open: DoorL1_Open
			{
				selection = "doorR1";
				source = DoorR1_Open;
				axis = "doorR1_axis";
				angle1 = "rad -85";
			};
		};
	};

};